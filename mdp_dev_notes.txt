. git push heroku yourbranch:master - pushing a remote branch to heroku

jekyll

	can't find error information online
			Matthews-MacBook-Pro:partreach matt$ rake generate
		rake aborted!
		uninitialized constant Jekyll::Sass::StaticFile
		/Users/matt/.rvm/gems/ruby-2.0.0-rc2/gems/jekyll-sass-1.1.0/lib/jekyll-sass.rb:21:in `<module:Sass>'
		/Users/matt/.rvm/gems/ruby-2.0.0-rc2/gems/jekyll-sass-1.1.0/lib/jekyll-sass.rb:4:in `<module:Jekyll>'
		/Users/matt/.rvm/gems/ruby-2.0.0-rc2/gems/jekyll-sass-1.1.0/lib/jekyll-sass.rb:3:in `<top (required)>'
		/Users/matt/.rvm/gems/ruby-2.0.0-rc2@global/gems/bundler-1.3.5/lib/bundler/runtime.rb:72:in `require'
		/Users/matt/.rvm/gems/ruby-2.0.0-rc2@global/gems/bundler-1.3.5/lib/bundler/runtime.rb:72:in `block (2 levels) in require'
		/Users/matt/.rvm/gems/ruby-2.0.0-rc2@global/gems/bundler-1.3.5/lib/bundler/runtime.rb:70:in `each'
		/Users/matt/.rvm/gems/ruby-2.0.0-rc2@global/gems/bundler-1.3.5/lib/bundler/runtime.rb:70:in `block in require'
		/Users/matt/.rvm/gems/ruby-2.0.0-rc2@global/gems/bundler-1.3.5/lib/bundler/runtime.rb:59:in `each'
		/Users/matt/.rvm/gems/ruby-2.0.0-rc2@global/gems/bundler-1.3.5/lib/bundler/runtime.rb:59:in `require'
		/Users/matt/.rvm/gems/ruby-2.0.0-rc2@global/gems/bundler-1.3.5/lib/bundler.rb:132:in `require'
		/Users/matt/partreach/config/application.rb:5:in `<top (required)>'
		/Users/matt/partreach/Rakefile:5:in `require'
		/Users/matt/partreach/Rakefile:5:in `<top (required)>'
		/Users/matt/.rvm/gems/ruby-2.0.0-rc2/bin/ruby_noexec_wrapper:14:in `eval'
		/Users/matt/.rvm/gems/ruby-2.0.0-rc2/bin/ruby_noexec_wrapper:14:in `<main>'
		(See full trace by running task with --trace)
		Matthews-MacBook-Pro:partreach matt$ bundle outdated
		Fetching gem metadata from https://rubygems.org/.......
		Fetching gem metadata from https://rubygems.org/..
		Resolving dependencies...

		Outdated gems included in the bundle:
		  * bcrypt-ruby (3.1.2 > 3.0.1)
		  * builder (3.2.2 > 3.1.4)
		  * coderay (1.1.0 > 1.0.9)
		  * jekyll (1.1.2 > 0.12.1)
		  * kramdown (1.2.0 > 0.14.2)
		  * liquid (2.5.2 > 2.5.1)
		  * minitest (5.0.6 > 4.7.5)
		  * pygments.rb (0.5.2 > 0.3.7)
		  * tzinfo (1.0.1 > 0.3.37)

caching

	problem
		seemed OK locally, but slowed things down in production badly

	resources - MEMORY STORE DOESN'T WORK WITH HEROKU
		http://guides.rubyonrails.org/caching_with_rails.html
		https://devcenter.heroku.com/articles/caching-strategies
		http://api.rubyonrails.org/classes/ActiveSupport/Cache/Store.html
			do you need to declare a new cache object, as they do? 
				doesn't look like it, but cn't be sure
				if do have to declare, it'd be here - http://api.rubyonrails.org/classes/ActiveSupport/Cache/MemoryStore.html 

	alternate
		https://devcenter.heroku.com/articles/memcache - DEPRECATED may work better with heroku
		http://stackoverflow.com/questions/2232981/heroku-with-caching

	memcache/dalli
		https://devcenter.heroku.com/articles/building-a-rails-3-application-with-memcache
			TRY THIS FIRST 

	iron-cache		
		https://devcenter.heroku.com/articles/iron_cache#getting-started
		http://dev.iron.io/cache/

	irrelevant
		consider_all_requests_local

next
	[] try to take live, see what problems if any are
	[] if works, leave up and figure out how to test local
	[] set times to check cache size and see if we're goign to hit the end of the plan		